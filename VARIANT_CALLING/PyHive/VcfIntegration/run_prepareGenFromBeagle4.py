import eHive
import os
from VCFIntegration.Beagle import Beagle

class run_prepareGenFromBeagle4(eHive.BaseRunnable):
    """Run prepareGenFromBeagle4 on a set of posteriors VCFs generated by BEAGLE across different chunks"""
    
    def run(self):

        verbose=None
        if self.param_is_defined('verbose'):
            verbose=True
        else:
            verbose=False

        outprefix=os.path.split(self.param_required('outprefix'))[1]
        outprefix="{0}/{1}".format(self.param_required('work_dir'),outprefix)
        
        vcf_object=Beagle(vcf=self.param_required('vcf_file'),
                          prepareGenFromBeagle4_folder=self.param_required('prepareGenFromBeagle4_folder'))

        outfiles=vcf_object.prepare_Gen_From_Beagle4(prefix_in=self.param_required('prefix_in'),
                                                     outprefix=outprefix)
        
        self.param('outfiles', outfiles)
       
    def write_output(self):
        self.warning('Work is done!')
        self.dataflow( {'outfiles' : self.param('outfiles') }, 1)



